#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

include Hooky::Redis

# Setup
boxfile = converge( Hooky::Redis::BOXFILE_DEFAULTS, payload[:boxfile] )

# set redis config
ip        = `ifconfig eth0 | awk '/inet addr/ {print $2}' | cut -f2 -d':'`.to_s.strip
master_ip = payload[:generation][:members].select { |mem| mem[:role] == 'primary'}[0][:local_ip]
master    = (master_ip == ip) ? false : master_ip
sentinel  = (payload[:generation][:members].select { |mem| mem[:role] == 'arbitrator'}[0][:local_ip] == ip) ? master_ip : '127.0.0.1'
total_mem = `vmstat -s | grep 'total memory' | awk '{print $1}'`.to_i
cgroup_mem = `cat /sys/fs/cgroup/memory/memory.limit_in_bytes`.to_i
maxmemory = [ total_mem / 1024, cgroup_mem / 1024 / 1024 ].min

directory '/data/etc/redis' do
  owner 'gonano'
  group 'gonano'
end

directory '/data/etc/flip' do
  owner 'gonano'
  group 'gonano'
end

if payload[:member][:type] == 'default'
  # configure redis for redundancy
  template '/data/etc/redis/redis.conf' do
    source 'redis-redundant.conf.erb'
    mode 0644
    variables ({ boxfile: boxfile , slaveof: master, maxmemory: maxmemory})
    owner 'gonano'
    group 'gonano'
  end

  # configure sentinel to provide redundancy
  template '/data/etc/redis/sentinel.conf' do
    source 'sentinel.conf.erb'
    mode 0644
    variables ({ master: master_ip })
    owner 'gonano'
    group 'gonano'
  end

  # configure redis-proxy to provide high availability and interaction with sentinel
  template '/data/etc/redis/redis-proxy.conf' do
    source 'redis-proxy.conf.erb'
    mode 0644
    variables ({ sentinel_ip: sentinel })
    owner 'gonano'
    group 'gonano'
  end

  # set flip.conf
  template '/data/etc/flip/flip.conf' do
    mode 0644
    variables ({
      payload: payload
    })
  end
elsif payload[:member][:type] == 'arbitrator'
  template '/data/etc/redis/sentinel.conf' do
    source 'sentinel.conf.erb'
    mode 0644
    variables ({ master: master_ip })
    owner 'gonano'
    group 'gonano'
  end

  # set flip.conf
  template '/data/etc/flip/flip.conf' do
    mode 0644
    variables ({
      payload: payload
    })
  end

  # Narc Setup
  template '/opt/gonano/etc/narc.conf' do
    source 'narc.conf.erb'
    variables ({
      service: payload[:service],
      app: payload[:app],
      logtap: payload[:logtap_host],
      uid: payload[:uid]
    })
  end

  directory '/etc/service/narc'

  template '/etc/service/narc/run' do
    mode 0755
    source 'run-root.erb'
    variables ({ exec: "/opt/gonano/bin/narcd /opt/gonano/etc/narc.conf" })
  end
end